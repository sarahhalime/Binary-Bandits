{"ast":null,"code":"var _jsxFileName = \"/Users/bhumishah/Ignition-Hacks/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (token) {\n        try {\n          const userData = await authAPI.getProfile();\n          setUser(userData);\n        } catch (error) {\n          console.error('Failed to get user profile:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login(email, password);\n      const {\n        access_token,\n        user: userData\n      } = response;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(userData);\n      toast.success('Welcome back!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      const {\n        access_token,\n        user: newUser\n      } = response;\n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(newUser);\n      toast.success('Account created successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const updatedUser = await authAPI.updateProfile(profileData);\n      setUser(updatedUser);\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to update profile';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","initializeAuth","userData","getProfile","error","console","removeItem","login","email","password","response","access_token","setItem","success","_error$response","_error$response$data","message","data","register","newUser","_error$response2","_error$response2$data","logout","updateProfile","profileData","updatedUser","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bhumishah/Ignition-Hacks/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      if (token) {\n        try {\n          const userData = await authAPI.getProfile();\n          setUser(userData);\n        } catch (error) {\n          console.error('Failed to get user profile:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login(email, password);\n      const { access_token, user: userData } = response;\n      \n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(userData);\n      \n      toast.success('Welcome back!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await authAPI.register(userData);\n      const { access_token, user: newUser } = response;\n      \n      localStorage.setItem('token', access_token);\n      setToken(access_token);\n      setUser(newUser);\n      \n      toast.success('Account created successfully!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Registration failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const updatedUser = await authAPI.updateProfile(profileData);\n      setUser(updatedUser);\n      toast.success('Profile updated successfully');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to update profile';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    token,\n    login,\n    register,\n    logout,\n    updateProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}